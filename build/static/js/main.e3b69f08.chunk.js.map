{"version":3,"sources":["components/Input.js","components/Search.js","components/Button.js","services/persons.js","components/Submit.js","components/Contact.js","components/Person.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Input","text","value","handleOnChange","onChange","Search","props","newSearch","event","target","setNewSearch","toRender","toLowerCase","persons","map","person","push","regex","RegExp","name","test","setPersonsToRender","Button","type","baseUrl","getAll","axios","get","then","response","data","newObject","post","id","personObject","url","delete","put","Submit","onSubmit","preventDefault","p","find","newName","message","window","confirm","changePerson","number","newNumber","personService","returnedPerson","setPersons","personsToRender","setNewName","setNewNumber","setUpdateMessage","setTimeout","catch","error","setErrorMessage","updatePerson","alert","concat","addPerson","Contact","handleDelete","onClick","Person","personsReturned","filter","handleDeleteOf","Notification","style","borderStyle","borderColor","padding","marginBottom","borderRadius","background","color","Error","App","useState","updateMessage","errorMessage","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3b69f08.chunk.js","sourcesContent":["import React from 'react'\n\nconst Input = ({ text, value, handleOnChange }) => <div>{text} <input value={value} onChange={handleOnChange}/></div>\n\nexport default Input","import React from 'react'\nimport Input from './Input'\n\n\nconst Search = (props) => {\n    const handleSearch = (event) => {\n        let value = event.target.value\n        props.setNewSearch(value)\n        const toRender = []\n        value = value.toLowerCase()\n        if (value === '') {\n            props.persons.map(person => toRender.push(person))\n        }\n        else {\n            props.persons.map(person => {\n                const regex = new RegExp(`${value}`)\n                let name = person.name.toLowerCase()\n                if (regex.test(name)){\n                    return toRender.push(person)\n                }\n                else {\n                    return toRender\n                }\n            })\n        }\n        props.setPersonsToRender(toRender)\n    }\n    return (\n        <>\n            <Input value={props.newSearch} handleOnChange={handleSearch} text='filter shown with' />\n        </>\n    )\n}\n\nexport default Search","import React from 'react'\n\nconst Button = ({ type, text}) => <div><button type={type}>{text}</button></div>\n\nexport default Button","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n        const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n        const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst delt = (id, personObject) => {\n        const url = baseUrl + id\n        const request = axios.delete(url, personObject)\n    return request.then(() => getAll())\n}        \n\nconst update = (id, personObject) => {\n        const url = baseUrl + id\n        const request = axios.put(url, personObject)\n    return (request.then(response => response.data))\n}\n\nexport default {getAll, create, delt, update}","import React from 'react'\nimport Input from './Input'\nimport Button from './Button'\nimport personService from '../services/persons'\n\n\nconst Submit = (props) => {\n\n    const addPerson = () => {      \n        const personObject = \n        {\n            name: props.newName,\n            number: props.newNumber,\n        }\n        personService\n            .create(personObject)\n            .then(returnedPerson => {\n                props.setPersons(props.persons.concat(returnedPerson))\n                props.setPersonsToRender(props.persons.concat(returnedPerson))\n                props.setNewName('')\n                props.setNewNumber('')\n            })\n            .then(() => {\n                props.setUpdateMessage(\n                    `${personObject.name}'s number created`\n                    )\n                    setTimeout(() => {          \n                        props.setUpdateMessage(null)        \n                    }, 3000)\n            })\n            .catch(error => {\n                props.setErrorMessage(\n                    `Information of ${personObject.name} has already been removed from server`\n                )\n                setTimeout(() => {          \n                    props.setErrorMessage(null)        \n                }, 5000)\n            })\n    }\n\n    const updatePerson = id => {\n        const person = props.persons.find(p => p.id === id)\n        const changePerson = {...person, number: props.newNumber}\n\n        personService\n            .update(id, changePerson)\n            .then(returnedPerson => {\n                props.setPersons(props.persons.map(person => person.id !== id ? person : returnedPerson))\n                props.setPersonsToRender(props.personsToRender.map(person => person.id !== id ? person : returnedPerson))\n                props.setNewName('')\n                props.setNewNumber('')\n            })\n            .then(() => {\n                props.setUpdateMessage(\n                    `${person.name}'s number updated`\n                    )\n                    setTimeout(() => {          \n                        props.setUpdateMessage(null)        \n                    }, 3000)\n            })\n            .catch(error => {\n                props.setErrorMessage(\n                    `Information of ${person.name} has already been removed from server`\n                )\n                setTimeout(() => {          \n                    props.setErrorMessage(null)        \n                }, 5000)\n            })\n    }\n    \n    const handleNameChange = (event) => {\n        props.setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        props.setNewNumber(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const p = props.persons.find(person => person.name === props.newName)\n        if (p) {\n            const message = `${props.newName || \"name\"} is already added to phonebook. Do you want to update the phone number ? `\n            if(window.confirm(message)){\n                updatePerson(p.id)\n            }\n        }\n        else if (props.newName === '' || props.newNumber === ''){\n            alert(`please provide a name and a phone number`)\n        }\n        else {\n            addPerson()\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <h2>add a new contact</h2>\n                <Input value={props.newName} handleOnChange={handleNameChange} text='name' />\n                <Input value={props.newNumber} handleOnChange={handleNumberChange} text='number' />\n                <Button type='type' text='add' />\n            </form>\n        </>\n    )\n}\n\nexport default Submit","import React from 'react'\n\nconst Contact = ({ person, handleDelete }) => {\n    return (\n        <>\n            <p>\n                {person.name} {person.number} \n                <button onClick={handleDelete}>delete</button>\n            </p>\n        </>\n    )\n}\n\nexport default Contact","import React from 'react'\nimport Contact from './Contact'\nimport personService from '../services/persons'\n\nconst Person = (props) => {\n    \n    const handleDeleteOf = id => {\n        const person = props.persons.find(p => p.id === id)\n        if (window.confirm(`Delete ${person.name} ?`)){\n        personService\n            .delt(id, person)\n            .then(personsReturned => {\n                props.setPersonsToRender(personsReturned)\n                props.setPersons(personsReturned)\n                props.setNewSearch('')\n            })\n            .catch(error => {\n                props.setErrorMessage(\n                    `Information of ${person.name} has already been removed from server`\n                )\n                setTimeout(() => {          \n                    props.setErrorMessage(null)        \n                }, 5000)\n                props.setPersons(props.persons.filter(p => p.id !== id))\n                props.setPersonsToRender(props.personsToRender.filter(p => p.id !== id))\n            })\n        }\n\n    }\n    return (\n        <>\n            {props.personsToRender.map(person => \n                <Contact key={person.name} person={person} handleDelete={() => handleDeleteOf(person.id)} />\n                )}\n        </>\n    )\n}\n\nexport default Person","import React from 'react'\n\n\nconst Notification = ({ message }) => {\n    const notificationStyle = {\n        borderStyle: 'solid',\n        borderColor: 'green',\n        padding: '10px',\n        marginBottom: '10px',\n        borderRadius: '20px',\n        background: '#92e692',\n        color: 'green',\n    }\n\n    if (message === null) {\n        return null\n    }\n    return (\n        <div style={notificationStyle} >\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst Error = ({ message }) => {\n    const errorStyle = {\n        borderStyle: 'solid',\n        borderColor: 'red',\n        padding: '10px',\n        marginBottom: '10px',\n        borderRadius: '20px',\n        background: '#ffc3c3',\n        color: 'red',\n    }\n    if (message === null){\n        return null\n    }\n    return (\n        <div style={errorStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Error","import React, { useState, useEffect } from 'react'\nimport Search from './components/Search'\nimport Submit from './components/Submit'\nimport Person from './components/Person'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\n\n\n\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newSearch, setNewSearch] = useState('')\n    const [personsToRender, setPersonsToRender] = useState(persons)\n    const [updateMessage, setUpdateMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(persons => {\n                setPersons(persons)\n                setPersonsToRender(persons)\n            })\n    }, [])\n    \n    return (\n        <>\n            <h2>Phonebook</h2>\n            <Error message={errorMessage}/>\n            <Notification message={updateMessage}/>\n            <Search \n                newSearch={newSearch} \n                setNewSearch={setNewSearch} \n                persons={persons} \n                setPersons={setPersons} \n                newName={newName} \n                setNewName={setNewName} \n                newNumber={newNumber} \n                setNewNumber={setNewNumber} \n                personsToRender={personsToRender} \n                setPersonsToRender={setPersonsToRender}\n            />\n            <Submit \n                persons={persons} \n                setPersons={setPersons} \n                newName={newName} \n                setNewName={setNewName} \n                newNumber={newNumber} \n                setNewNumber={setNewNumber} \n                personsToRender={personsToRender} \n                setPersonsToRender={setPersonsToRender}\n                setUpdateMessage={setUpdateMessage}\n                setErrorMessage={setErrorMessage}\n            />\n            <h2>Numbers</h2>\n            <Person \n                personsToRender={personsToRender} \n                persons={persons} \n                setPersonsToRender={setPersonsToRender}\n                setPersons={setPersons}\n                setNewSearch={setNewSearch}\n                setErrorMessage={setErrorMessage}\n            />\n        </>\n    )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}